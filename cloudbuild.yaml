# substitutions:
#   _REGION: 'us-central1'
#   _REPO_NAME: 'laravel-repo'
#   _IMAGE_NAME: 'laravel-app'
#   _TAG: 'latest'  # $SHORT_SHA immutable tags
#   _CLUSTER_NAME: 'laravel-cluster'
#   _CLUSTER_ZONE: 'us-central1-c'
#   _RELEASE_NAME: 'my-release'
#   _NAMESPACE: 'default'
#   _HELM_CHART_PATH: './helm/laravel-chart'
#   _ENV: 'production'  # env type

# steps:
#   # Step 0: Prepare SSH Key and secrets
#   - name: gcr.io/cloud-builders/gcloud
#     id: "Prepare Secrets Data"
#     waitFor: ['-']  
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         echo "ðŸ“¦ Preparing secrets and SSH key..."
#         mkdir -p /root/.ssh ./ssh

#         gcloud secrets versions access latest --secret=Github-Noot-App > /root/.ssh/id_github
#         gcloud secrets versions access latest --secret=env_${_ENV} > ./ssh/env
#         gcloud secrets versions access latest --secret=gcs-noot-app-prod-std-${_ENV} > ./ssh/gcs-noot-app-prod-std.json
#         cp ./ssh/gcs-noot-app-prod-std.json ./gcs-noot-app-prod-std.json
#         gcloud secrets versions access latest --secret=composer-auth > ./ssh/composer-auth.json

#         chmod 600 /root/.ssh/id_github
#         cat <<EOF > /root/.ssh/config
#         Host github
#           Hostname github.com
#           User git
#           IdentityFile /root/.ssh/id_github
#           StrictHostKeyChecking no
#         EOF
#         chmod 600 /root/.ssh/config
#         ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts

#         echo "âœ… SSH & Secrets setup complete."
#         ls -l /root/.ssh
#         ls -l ./ssh

#   # Step 1: Build Docker image
#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Build Docker Image'
#     waitFor: ['Prepare Secrets Data']
#     args:
#       [
#         'build',
#         '-t',
#         '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$_TAG',
#         '.'
#       ]

#   # Step 2: Push image to Artifact Registry
#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Push to Artifact Registry'
#     args:
#       [
#         'push',
#         '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$_TAG'
#       ]

#   # Step 3: Get GKE credentials
#   # - name: 'gcr.io/cloud-builders/gcloud'
#   #   id: 'Get GKE Credentials'
#   #   args:
#   #     [
#   #       'container',
#   #       'clusters',
#   #       'get-credentials',
#   #       '$_CLUSTER_NAME',
#   #       '--zone',
#   #       '$_CLUSTER_ZONE',
#   #       '--project',
#   #       '$PROJECT_ID'
#   #     ]

#   # Step 4: Deploy using Helm
#   # - name: 'gcr.io/k8s-skaffold/helm'
#   #   id: 'Helm Deploy'
#   #   entrypoint: 'sh'
#   #   args:
#   #     - '-c'
#   #     - |
#   #       helm upgrade --install $_RELEASE_NAME $_HELM_CHART_PATH \
#   #         --namespace $_NAMESPACE \
#   #         --create-namespace \
#   #         --set image.repository=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME \
#   #         --set image.tag=$_TAG

# images:
#   - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$_TAG'
options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _TAG: '${BUILD_ID}'

  _REGION: 'me-central2'
  _REPO_NAME: 'hello-world-app'
  _IMAGE_NAME: 'laravel-app'
  _CLUSTER_NAME: 'noot-app'
  _CLUSTER_ZONE: 'me-central2'
  _RELEASE_NAME: 'laravel-app'
  _NAMESPACE: 'laravel-test'
  _HELM_CHART_PATH: 'laravel-chart'
  _ENV: 'production'  

steps:
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'me-central2-docker.pkg.dev/double-vehicle-417323/hello-world-app/laravel-app:${_TAG}',
        '.'
      ]

  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'me-central2-docker.pkg.dev/double-vehicle-417323/hello-world-app/laravel-app:${_TAG}'
      ]

  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "Cloning repo..."
        git clone https://mohamedmeslhy:${_GIT_TOKEN}@github.com/mohamedmeslhy/laravel-chart.git
        cd laravel-chart
        echo "Updating tag in values.yaml to ${_TAG} ..."
        sed -i "s/^\(\s*tag:\s*\).*/\1${_TAG}/" values.yaml
        echo "Updated values.yaml:"
        grep 'tag:' values.yaml
        git config --global user.name "mohamedmeslhy"
        git config --global user.email "mmeslhy110@gmail.com"
        git add .
        git commit -m "edited images tag value"
        git push origin main
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Get GKE Credentials'
    args:
      [
        'container',
        'clusters',
        'get-credentials',
        '$_CLUSTER_NAME',
        '--zone',
        '$_CLUSTER_ZONE',
        '--project',
        '$PROJECT_ID'
      ]

  - name: 'gcr.io/k8s-skaffold/helm'
    id: 'Helm Deploy'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        helm upgrade --install $_RELEASE_NAME $_HELM_CHART_PATH \
          --namespace $_NAMESPACE \
          --create-namespace \
          --set image.repository=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME \
          --set image.tag=$_TAG
